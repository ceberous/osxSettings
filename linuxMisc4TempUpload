#!/bin/bash

# sudo apt-get install rsync at && \
# sudo systemctl start atd && \
# sudo systemctl enable atd && \
# sudo systemctl status atd

# Define the IP address, username, and path to the SSH key file
IP_ADDRESS="192.168.4.144"
USERNAME="morphs"
SSH_KEY_FILE="/Users/morpheous/Library/CloudStorage/Dropbox/Misc/SSH2/KEYS/linuxmisc4"
PUBLIC_URL="https://dropbox.34353.org"

# Check if at least one argument is provided
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <source> [duration]"
    exit 1
fi

# Define the source directory/file
SOURCE="$1"

# Generate UUID and get extension of the file or directory
UUID=$(uuidgen)
uuid=$(echo "$UUID" | tr '[:upper:]' '[:lower:]')
EXTENSION=""

# Check if the SOURCE is a file, then get the extension
if [ -f "$SOURCE" ]; then
    EXTENSION=".${SOURCE##*.}"
fi

# Construct the new destination file/directory name with UUID and the extension (if exists)
DESTINATION_PATH="/home/morphs/DOCKER_IMAGES/TEMP_AFS_IPS/FILES"
DESTINATION_FILE="$uuid$EXTENSION"
DESTINATION="$USERNAME@$IP_ADDRESS:$DESTINATION_PATH/$DESTINATION_FILE"

# Define the custom SSH command
SSH_COMMAND="ssh -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o LogLevel=ERROR -F /dev/null -i $SSH_KEY_FILE"
# SSH_COMMAND="ssh -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o LogLevel=ERROR -i $SSH_KEY_FILE"

# Use rsync to copy the files
rsync -avz -e "$SSH_COMMAND" "$SOURCE" "$DESTINATION"

# # Check if the second argument is a valid duration
# if [[ "$2" =~ ^[0-9]+[mhdw]$ ]]; then
#     DURATION=$2
# else
#     DURATION="1 hour"
# fi

# Set the files to read-only and schedule deletion
# $SSH_COMMAND $USERNAME@$IP_ADDRESS "chmod 444 \"$DESTINATION_PATH/$DESTINATION_FILE\""
# $SSH_COMMAND $USERNAME@$IP_ADDRESS "chmod 444 \"$DESTINATION_PATH/$DESTINATION_FILE\" && echo \"rm -f $DESTINATION_PATH/$DESTINATION_FILE\" | at now + $DURATION > /tmp/at_output.txt 2>&1"

# Check if the source is a directory, then set appropriate permissions
if [ -d "$SOURCE" ]; then
    $SSH_COMMAND $USERNAME@$IP_ADDRESS "echo 'Options +Indexes' > \"$DESTINATION_PATH/$DESTINATION_FILE/.htaccess\" && find \"$DESTINATION_PATH/$DESTINATION_FILE\" -type d -exec chmod 555 {} \; && chmod 444 \"$DESTINATION_PATH/$DESTINATION_FILE/.htaccess\" && find \"$DESTINATION_PATH/$DESTINATION_FILE\" -type f -exec chmod 444 {} \;"
else
    $SSH_COMMAND $USERNAME@$IP_ADDRESS "chmod 444 \"$DESTINATION_PATH/$DESTINATION_FILE\""
fi


# Print the URL
echo "File URL: $PUBLIC_URL/$DESTINATION_FILE"