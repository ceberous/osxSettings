#!/usr/bin/env python3
import os
from PIL import Image
import sys

# --- CONFIGURABLE PARAMETERS ---
CROP_LEFT = 148   # Pixels to remove from the left side
CROP_TOP = 160    # Pixels to remove from the top side
CROP_RIGHT = 1770  # Start cropping from this pixel to remove everything on the right
CROP_BOTTOM = 0   # Pixels to remove from the bottom side (if needed)
# --- END OF CONFIGURABLE PARAMETERS ---

def crop_image(image_path, output_path):
	"""Crop an image according to the specified dimensions and save it."""
	with Image.open(image_path) as img:
		# Calculate the cropped box (left, upper, right, lower)
		left = CROP_LEFT
		top = CROP_TOP
		right = min(CROP_RIGHT, img.width) if CROP_RIGHT > 0 else img.width
		bottom = img.height - CROP_BOTTOM if CROP_BOTTOM > 0 else img.height

		# Crop the image
		cropped_img = img.crop((left, top, right, bottom))

		# Save the cropped image to the output directory
		cropped_img.save(output_path)

def batch_crop_images(input_folder, output_folder):
	"""Batch crop all images in a folder based on the configuration parameters."""
	# Create output folder if it doesn't exist
	os.makedirs(output_folder, exist_ok=True)

	# Iterate through all files in the input folder
	for filename in os.listdir(input_folder):
		if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.tiff')):
			input_path = os.path.join(input_folder, filename)
			output_path = os.path.join(output_folder, filename)

			# Crop the image
			crop_image(input_path, output_path)
			print(f"Cropped and saved: {output_path}")

if __name__ == "__main__":
	# Determine input folder based on argument or default to current working directory
	input_folder = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()

	# Create output folder path based on input folder
	output_folder = f"{input_folder}_cropped"

	# Run the batch cropping with the configured parameters
	batch_crop_images(input_folder, output_folder)

	print(f"All images have been cropped and saved in: {output_folder}")
